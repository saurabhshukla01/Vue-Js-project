Vue.Js Setup Part 5 :	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

links :https://www.youtube.com/watch?v=qZPww-JWcik&list=PL8p2I9GklV45qwTH-mdzllUuFRJO-euYn&index=37


Dynamic Component  >>>

Create dynamic components    >>>

Java.vue   >>>>

<template>
    <h3>Java Content</h3>
</template>
<script>
export default {
    name:"JavaComponent",
}
</script>

Php.vue    >>>

<template>
    <h3>PHP Content</h3>
</template>
<script>
export default {
    name:"PhpComponent",
}
</script>

Node.vue   >>>>>

<template>
    <h3>Node Content</h3>
</template>
<script>
export default {
    name:"NodeComponent",
}
</script>

App.vue   >>>>

<template>
  <div id="app">
    <h2>Dynamic Component</h2>
    <!-- Corrected component usage -->
    <button @click="tag='Php'">Load PHP</button>
    <button @click="tag='Java'">Load Java</button>
    <button @click="tag='Node'">Load Node</button>
    <component :is="tag"></component>
    <!-- <Php />
    <Java />
    <Node /> -->
  </div>
</template>

<script>
// Correct import for renamed component
import Php from './components/Php.vue';
import Java from './components/Java.vue';
import Node from './components/Node.vue';

export default {
  name: 'App',
  components: {
    Php,Java,Node // Registered as dynamic component
  },
  data(){
    return {tag:"Java"}
  }
};
</script>

<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
</style>


write all logic how to load button click component is loaded to easy way.


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Teleport component with example    >>>>>

App.vue   >>>>

<template>
    <h1>Teleport</h1>
    <p>With &lt;teleport to="body"&gt; we move the red &lt;div&gt; from inside the component to the body tag.</p>
    <comp-one></comp-one>
  </template>
  
  <script></script>
  
  <style>
    #app {
      width: 350px;
      margin: 10px;
    }
    #app > div {
      border: solid black 2px;
      padding: 10px;
      margin-top: 10px;
      background-color: rgb(186, 228, 255);
    }
    h2 {
      text-decoration: underline;
    }
  </style>                  


CompOne.vue   >>>>>

<template>
    <div>
        <h2>Component</h2>
        <p>This is the inside of the component.</p>
        <Teleport to="body">
          <div id="redDiv">Hello!</div>
        </Teleport>
    </div>
</template>

<script></script>

<style scoped>
  #redDiv {
    background-color: lightcoral;
    margin: 10px;
    padding: 10px;
    display: inline-block;
  }
</style>                  

Main.js    >>>>>

// Import Vue and App component
import { createApp } from 'vue';
import App from './App.vue';

// Import Bootstrap and BootstrapVue 3 CSS files
import 'bootstrap/dist/css/bootstrap.css';
import 'bootstrap-vue-3/dist/bootstrap-vue-3.css';

// Import BootstrapVue 3
import BootstrapVue3 from 'bootstrap-vue-3';

// Import component CompOne for Teleport component
import CompOne from './components/CompOne.vue'

// Import Vue Router and necessary methods from vue-router
import { createRouter, createWebHistory } from 'vue-router';

// Import the components for routing
import Home from './components/Home.vue';
import About from './components/About.vue';
import Login from './components/Login.vue';
import User from './components/User.vue';
import PageNotFound from './components/PageNotFound.vue';

// Define the routes
const routes = [
  { path: '/', component: Home },
  { path: '/about', component: About },
  { path: '/login', component: Login },
  { path: '/user/:id', component: User },
  // { path: '*', component: PageNotFound },  // not used its use in vue 2 not this * is not exits
  { path: '/:pathMatch(.*)*', component: PageNotFound }, // Catch-all for 404 Page Not Found
];


// Create the router instance
const router = createRouter({
  history: createWebHistory(),
  routes,
});

// Create the Vue app instance
const app = createApp(App);

// Use BootstrapVue 3 globally
app.use(BootstrapVue3);

// Use Vue Router globally
app.use(router);


// Custom directive 'v-color'
app.directive('color', {
  // This will be called when the directive is mounted on the element
  mounted(el, binding) {
    el.style.color = binding.value; // Set the element's color to the directive's value
  }
});

// Custom directive 'focus'
app.directive('focus', {
  mounted(el, binding) {
    // Focus the element
    if (binding.modifiers.log) {
      console.log("Element is being focused!");
    }
    el.focus();
  }
});


// Define the global "filter-like" function (for example: capitalize)
app.config.globalProperties.$filters = {
  capitalize(val) {
    if (!val) return '';
    return val.toString().toUpperCase();
  },
};

// for Teleport component 
app.component('comp-one', CompOne)

// Mount the app to the #app element
app.mount('#app');



its teleport component how to right code ..


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




